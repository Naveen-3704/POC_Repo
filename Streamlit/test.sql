DROP TABLE IF EXISTS #temp_orderstable  CREATE TABLE #temp_orderstable  (      [ClientId] [int] NOT NULL,      [facilityid] [int] NOT NULL,      [OrderId] [int] NOT NULL,      [OrderDate] [datetime] NULL,      [diagnoses] [varchar](max) NULL,      [description] [varchar](max) NULL,      [directions] [varchar](max) NULL,      [indications_for_use] [varchar](max) NULL,      [schedule_directions] [varchar](max) NULL,      [OrderStatus] [int] NULL,      [discontinued_date] [datetime] NULL,      [orderstartdate] [datetime] NULL,      [ordertypeid] [int] NULL,      [category_desc] [varchar](50) NULL,      [ro_phys_order_id] [int] NULL,      [ordercaldate] [datetime] NULL,      [orderenddate] [datetime] NULL,      [VendorID] int,      [External_organization_id] int  ) ON [PRIMARY] textimage_on [PRIMARY];  INSERT INTO #temp_orderstable  (      clientid,      facilityid,      orderid,      orderdate,      diagnoses,      description,      directions,      indications_for_use,      schedule_directions,      orderstatus,      discontinued_date,      orderstartdate,      ordertypeid,      category_desc,      ro_phys_order_id,      ordercaldate,      orderenddate,      vendorid,      external_organization_id  )  SELECT DISTINCT      CONVERT(INT, CO.resident_id),      CONVERT(INT, CO.facility_id),      CONVERT(INT, CO.clinicalorder_id),      Isnull(CO.clinicalorder_startdate, CO.clinicalorder_orderedon) AS OrderDate,      CONVERT(VARCHAR(max), NULL) AS diagnoses,      CO.clinicalorder_detail AS description,      Isnull(CO.clinicalorder_protocol, '') AS directions,      '' AS indications_for_use,      '' AS schedule_directions,      CONVERT(INT, Isnull(CO.clinicalorder_status, 0)) AS OrderStatus,      CONVERT(                 DATETIME,                 CO.clinicalorder_discontinuedon             ) AS discontinued_date,      CO.clinicalorder_startdate,      CONVERT(INT, CO.clinicalorder_type) AS ordertypeid,      CONVERT(VARCHAR(50), NULL) AS category_desc,      CONVERT(INT, CO.clinicalorder_original) AS ro_phys_order_id,      CONVERT(                 DATETIME,                 CASE                     WHEN Isnull(CO.clinicalorder_stopdate, '@enddate') >= '@enddate' THEN                         '@enddate'                     ELSE                         Isnull(CO.clinicalorder_stopdate, '@enddate')                 END             ) AS ordercaldate,      CONVERT(                 DATETIME,                 CASE                     WHEN Isnull(CO.clinicalorder_stopdate, '@enddate') >= '@enddate' THEN                         '@enddate'                     ELSE                         Isnull(CO.clinicalorder_stopdate, '@enddate')                 END             ) AS orderenddate,      CONVERT(INT, @vendorid) AS VendorID,      CONVERT(VARCHAR(255), @OrganizationID) AS External_organization_id  FROM stvsc.clinicalorder CO      INNER JOIN stvsc.resident R          ON CO.resident_id = R.resident_id             AND CO.account_id = R.account_id             AND CO.account_id = @accountid      LEFT JOIN stvsc.clinicalorder COO          ON CO.account_id = COO.account_id             AND CO.clinicalorder_original IS NOT NULL             AND CO.resident_id = COO.resident_id             AND COO.clinicalorder_id = CO.clinicalorder_original  WHERE CO.clinicalorder_orderedon < Dateadd(dd, 1, '@enddate')        AND CONVERT(                       DATE,                       CASE                           WHEN Isnull(CO.clinicalorder_stopdate, '@enddate') >= '@enddate' THEN                               '@enddate'                           ELSE                               Isnull(CO.clinicalorder_stopdate, '@enddate')                       END                   ) >= '@startdate'        AND CONVERT(                       DATE,                       CASE                           WHEN Isnull(CO.clinicalorder_stopdate, '@enddate') > '@enddate' THEN                               '@enddate'                           ELSE                               Isnull(CO.clinicalorder_stopdate, '@enddate')                       END                   ) <= '@enddate'        AND (                CO.clinicalorder_base NOT IN ( 3,4,5 )                OR (                       CO.clinicalorder_base IN ( 3 )                       AND CO.clinicalorder_CreatedOn >= '@startdate'                       AND CO.clinicalorder_CreatedOn < Dateadd(dd, 1, '@enddate')                   )     --OR (     --                  CO.clinicalorder_base IN ( 3 )     --                  AND CO.clinicalorder_discontinuedon IS NULL     --              ) /*Considering orders if discontinuedon is null even if clinicalorderbase is 3*/            )        AND Isnull(CO.clinicalorder_status, 0) IN ( 2 ); /*Including only standing orders as per discussion with Loni*/  DROP TABLE IF EXISTS #scheduledirections  CREATE TABLE #scheduledirections  (      orderid int,      scheduledirections varchar(2000)  );  INSERT INTO #scheduledirections  SELECT DISTINCT      CONVERT(INT, clinicalorder_id),      Stuff(               (                   SELECT DISTINCT                       '|' + COR2.clinicalorderrx_sig                   FROM stvsc.clinicalorderrx COR2                   WHERE COR1.clinicalorder_id = COR2.clinicalorder_id                         AND COR2.account_id = @accountid                         AND COR1.account_id = @accountid                         AND COR1.resident_id = COR2.resident_id                   FOR xml path(''), type               ).value('(./text())[1]', 'varchar(max)'),               1,               1,               ''           ) AS scheduledirections  FROM stvsc.clinicalorderrx COR1;  UPDATE #temp_orderstable  SET schedule_directions = rn.scheduledirections,      directions = Ltrim(Concat(                                   Isnull(directions, ''),                                   ' ',                                   Isnull(indications_for_use, ''),                                   ' ',                                   Isnull(rn.scheduledirections, '')                               )                        )  FROM #scheduledirections rn      INNER JOIN #temp_orderstable o          ON o.orderid = rn.orderid;  DROP TABLE IF EXISTS #codeentry_orders  CREATE TABLE #codeentry_orders  (      codeentry_code int,      codeentry_description varchar(200)  );  INSERT INTO #codeentry_orders  (      codeentry_code,      codeentry_description  )  SELECT DISTINCT      CONVERT(INT, codeentry_code),      codeentry_description  FROM stvsc.codeentry  WHERE code = 'ClinicalOrderType';  UPDATE #temp_orderstable  SET category_desc = codeentry_description  FROM #codeentry_orders ceo      LEFT JOIN #temp_orderstable ot          ON ceo.codeentry_code = ot.ordertypeid;  UPDATE #temp_orderstable  SET description = Concat(Isnull(description, ''), ' ', Isnull(indications_for_use, ''))  SELECT *  FROM #temp_orderstable